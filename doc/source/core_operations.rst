Core Operations
===============

This section contains notes regarding the operations that are implemented in the system.

There are basically 5 types of operations :

1. Querying / Blocking

   * Querying refers to the ability of obtaining subsets of a dataset based on the values of their properties.
   * Querying is more complex than it appears and it also constitutes the absolute baseline over which many other
     algorithms are based on. For example, constructing various networks is in essensce a query.
   * Blocking is a term that is specialised to data linking and it is a process by which the amount of combinations
     involved in a linking problem is reduced. It is a subset of querying.
      
2. Linking

   * Linking refers to the process of cross referencing data about the same entity from two or more different datasets.
     At the moment, the system allows linking between any bibliographical database and [GRID](https://www.grid.ac/).
     For more information also see :ref:`data-linking-details`.
    
3. Counting

   * Counting refers to the ability of estimating the size of a set at the very least. It is closely associated to
     querying and the primary use case for something like this is counting occurences of MeSH terms over time or
     counting how many codes are there as the result to a particular query. For example, codes associated with
     research that originates from a country.
      
4. Bursting

   * Bursting refers to the ability to estimate robustly if a "tag" can be considered activated at a given point in
     time or not. "Tag" can be a MeSH term or a word or any other item of interest that is expressed as an event.

     Bursting is an improvement over counting. Specifically, counting the appearance of codes over time does not
     provide some form of null distribution against which to compare and decide if an increase is coincidential or
     not. Bursting considers a multi-state automaton which moves between states that imply emitting codes with
     different probabilities.

5. Network analysis

   * Network analysis refers to the ability of analysing various networks that result from scientific data. For example co-authorship networks.
     These provide information about collaborations.

Bursting
--------
Bursting was first described by Jon Kleinberg in `Bursty & Hierarchical Structure in Streams <https://www.cs.cornell.edu/home/kleinber/bhs.pdf>`_ and that 
paper has also formed the basis for subsequent algorithms.

In that paper, Kleinberg starts from the fundamental observation that the time intervals between successive events of interest follows the 
very important `exponential distribution <https://en.wikipedia.org/wiki/Exponential_distribution>`_.

That distribution is of the form :math:`P(x) = a_0 e^{-a_0x}`, where :math:`x` is the time interval between successive events of interest, 
:math:`a_0` an expected rate by which events of interested are generated by this process.

The model describes an automaton that at its most elementary form has two states :math:`q_0, q_1`. Each one of the states is associated with a **rate**.
The code is considered *at rest* when at state :math:`q_0` and *activated* at state :math:`q_1`. The transition between states is governed by two parameters:

1. :math:`s`
    * This parameter is the *distance* between the **rates** of at-rest and activated.
    
2. :math:`\gamma`
    * This parameter is a *cost* that is associated with transitioning between two states.
    
Insight provides bursting analysis at the following three levels:

Given a MeSH Code Identifier:

1. Data

   * Data is obtained as a count of papers that use that term every 6 months
   * This is a time series
    
2. Processing

   * The bursting model is implemented via Python's `burst_detection <https://pypi.python.org/pypi/burst_detection>`_.
    
3. Visualisation

   * Bursting is visualised via matplotlib and a specific vis filter.
